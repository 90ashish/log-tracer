version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: wurstmeister/kafka:2.12-2.2.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,SSL://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,SSL://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,SSL:SSL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-server.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: password
      KAFKA_SSL_KEY_PASSWORD: password
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka-server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: password
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_LOG_RETENTION_HOURS: 168
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./secrets:/etc/kafka/secrets
    depends_on:
      - zookeeper
    networks:
      - kafka-net
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  producer:
    build:
      context: .
      dockerfile: build/Dockerfile-producer
    container_name: log-producer
    environment:
      KAFKA_BROKER: kafka:9093
    networks:
      - kafka-net
    depends_on:
      kafka:
        condition: service_healthy
    volumes:
      - ./configs/producer:/root/configs/producer
      - ./secrets:/etc/kafka/secrets

  consumer:
    build:
      context: .
      dockerfile: build/Dockerfile-consumer
    container_name: log-consumer
    environment:
      KAFKA_BROKER: kafka:9093
      LOG_TOPIC: logs
    networks:
      - kafka-net
    depends_on:
      kafka:
         condition: service_healthy
    volumes:
      - ./configs/consumer:/root/configs/consumer
      - ./secrets:/etc/kafka/secrets

  dashboard:
    build:
      context: .
      dockerfile: build/Dockerfile-dashboard
    container_name: log-dashboard
    ports:
      - "8080:8080"
    networks:
      - kafka-net
    depends_on:
      - consumer

networks:
  kafka-net:
    driver: bridge
