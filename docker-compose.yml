version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: wurstmeister/kafka:2.12-2.2.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_RETENTION_HOURS: 168
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - kafka-net

  producer:
    build:
      context: .
      dockerfile: build/Dockerfile-producer
    container_name: log-producer
    environment:
      KAFKA_BROKER: kafka:9092
    networks:
      - kafka-net
    depends_on:
      - kafka

  consumer:
    build:
      context: .
      dockerfile: build/Dockerfile-consumer
    container_name: log-consumer
    environment:
      KAFKA_BROKER: kafka:9092
      LOG_TOPIC: logs
    networks:
      - kafka-net
    depends_on:
      - kafka

  dashboard:
    build:
      context: .
      dockerfile: build/Dockerfile-dashboard
    container_name: log-dashboard
    ports:
      - "8080:8080"
    networks:
      - kafka-net
    depends_on:
      - consumer

networks:
  kafka-net:
    driver: bridge
